name: Promote Flows from Staging

on:
  workflow_dispatch:

env:
  FILES_PATH: "flows"
  BRANCH_NAME: "descope/update-flows"

jobs:
  promote:
    name: Export flows and create PR
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Export Flows from Staging
        id: export
        uses: descope/descopecli/.github/actions/export@v0.8.11
        with:
          project_id: ${{ vars.STAGING_PROJECT_ID }}
          management_key: ${{ secrets.DESCOPE_MGMT_KEY }}
          files_path: ${{ env.FILES_PATH }}
          include: flows

      - name: Cancel if No Changes
        if: steps.export.outputs.changes_file == ''
        shell: bash
        env:
          GH_TOKEN: ${{ secrets.GH_PAT }}
        run: |
          echo 'Cancelling workflow â€” no changes detected.'
          gh run cancel "$GITHUB_RUN_ID" -v-repo "$GITHUB_REPOSITORY"
          echo '## No changes to flows' >> $GITHUB_STEP_SUMMARY
          echo ':information_source: Exported flows match existing files.' >> $GITHUB_STEP_SUMMARY

      - name: Compose PR Body
        id: compose
        if: steps.export.outputs.changes_file != ''
        shell: bash
        env:
          GH_TOKEN: ${{ secrets.GH_PAT }}
          DEFAULT_NAME: "${{ github.actor }}"
          DEFAULT_MAIL: "${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com"
        run: |
          export PATH_PREFIX="${{ env.FILES_PATH }}/"
          CHANGES_FILE=$(mktemp)
          while read -r line; do echo "- \`${line#$PATH_PREFIX}\`" >> $CHANGES_FILE; done < ${{ steps.export.outputs.changes_file }}

          BODY_FILE=$(mktemp)
          echo "### Description" > $BODY_FILE
          echo "Updated flow definitions from staging project \`${{ vars.STAGING_PROJECT_ID }}\`." >> $BODY_FILE
          echo "" >> $BODY_FILE
          echo "### Changes" >> $BODY_FILE
          cat $CHANGES_FILE >> $BODY_FILE

          echo pullreq_body="$BODY_FILE" >> $GITHUB_OUTPUT

          NAME="$(gh api /users/$GITHUB_ACTOR | jq -r '.name // ""')"
          MAIL="$(gh api /users/$GITHUB_ACTOR | jq -r '.email // ""')"
          AUTHOR="${NAME:-$DEFAULT_NAME} <${MAIL:-$DEFAULT_MAIL}>"
          echo pullreq_author="$AUTHOR" >> $GITHUB_OUTPUT

      - name: Set Git remote to use PAT
        if: steps.export.outputs.changes_file != ''
        run: |
          git remote set-url origin https://x-access-token:${{ secrets.GH_PAT }}@github.com/${{ github.repository }}.git

      - name: Create Pull Request
        if: steps.export.outputs.changes_file != ''
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GH_PAT }}
          branch: ${{ env.BRANCH_NAME }}
          delete-branch: true
          assignees: ${{ github.actor }}
          author: ${{ steps.compose.outputs.pullreq_author }}
          committer: ${{ steps.compose.outputs.pullreq_author }}
          commit-message: "Update Descope flows from staging"
          title: "Update flows from staging"
          body-path: ${{ steps.compose.outputs.pullreq_body }}
